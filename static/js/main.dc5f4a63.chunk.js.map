{"version":3,"sources":["components/NavBar.jsx","components/OrderedLists.jsx","components/Buttons.jsx","components/Subscript.jsx","components/Section.jsx","App.js","index.js"],"names":["navItems","text","isLogo","isCallToAction","StyledNavBar","styled","nav","_templateObject","StyledSecondaryNav","_ref2","className","react_default","a","createElement","filter","navItem","map","SpecialNavItem","key","NavItem","_templateObject2","p","_templateObject3","_templateObject4","Logo","_templateObject5","Header","_ref","ThePriorityList","listItems","Fragment","PriorityList","item","priority","li","StyledLi","TheUnPriorityList","UnPriorityList","StyledGenericOL","ol","OrderedLists_templateObject","OrderedLists_templateObject2","OrderedLists_templateObject3","OrderedLists_templateObject4","StyledButtonsContainer","ReverseOrderButton","onClick","e","alert","AnnotateButton","Buttons_templateObject","StyledButton","button","Buttons_templateObject2","Buttons_templateObject3","Buttons_templateObject4","StyledSubscript","Subscript_templateObject","listOfThings","TheSection","section","Section_templateObject","Title","h2","Section_templateObject2","MainDiv","div","Section_templateObject3","StyledListContainer","Section_templateObject4","Section","components_Subscript","OrderedLists_ThePriorityList","OrderedLists_TheUnPriorityList","Buttons","StyledBody","App_templateObject","Body","NavBar","components_Section","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.dc5f4a63.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n// Use this to contain items that will be in the navItem\nconst navItems = [\n  { text: \"Press\" },\n  { text: \"Blog\" },\n  { text: \"Contact Me\" },\n  { text: \"DMithamo\", isLogo: true },\n  { text: \"Portfolio\", isCallToAction: true },\n];\n\nconst Header = ({ className }) => {\n  return (\n    <StyledNavBar className={className}>\n      <Logo>{navItems.filter((navItem) => navItem.isLogo)[0].text}</Logo>\n      <StyledSecondaryNav navItems={navItems} />\n    </StyledNavBar>\n  );\n};\n\nconst SecondaryNav = ({ className, navItems }) => {\n  return (\n    <div className={className}>\n      {navItems\n        .filter((navItem) => !navItem.isLogo)\n        .map((navItem) =>\n          navItem.isCallToAction ? (\n            <SpecialNavItem key={navItem.text}>{navItem.text}</SpecialNavItem>\n          ) : (\n            <NavItem key={navItem.text}>{navItem.text}</NavItem>\n          ),\n        )}\n    </div>\n  );\n};\n\nconst StyledNavBar = styled.nav`\n  width: 100%;\n  margin: 0;\n  background-color: orange;\n  display: flex;\n  padding: 0.6em 0;\n  justify-content: space-between;\n`;\n\nconst StyledSecondaryNav = styled(SecondaryNav)`\n  display: flex;\n  justify-content: flex-end;\n\n  /* Using default direction === flex-direction: row;\n  * Good for creating a horizontal nav-bar\n  */\n`;\n\nconst NavItem = styled.p`\n  cursor: pointer;\n  margin: 0 20px;\n  padding: 10px;\n\n  @media (max-width: 800px) {\n    display: none;\n    &:last-of-type {\n      display: inline;\n    }\n  }\n`;\n\nconst SpecialNavItem = styled(NavItem)`\n  color: white;\n  background-color: black;\n  border-radius: 8px;\n  transition: all 0.3s;\n\n  :hover {\n    color: black;\n    background-color: white;\n  }\n\n  /* To style an item on the nav differently */\n`;\n\nconst Logo = styled(NavItem)`\n  font-weight: bold;\n`;\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const ThePriorityList = ({ className, listItems }) => (\n  <React.Fragment>\n    <p>Priorities</p>\n    <PriorityList className={className}>\n      {listItems\n        .filter((item) => item.priority)\n        .map((li) => (\n          <StyledLi className={className} key={li.text}>\n            {li.text}\n          </StyledLi>\n        ))}\n    </PriorityList>\n  </React.Fragment>\n);\n\nexport const TheUnPriorityList = ({ className, listItems }) => (\n  <React.Fragment>\n    <p>Less than priority</p>\n    <UnPriorityList className={className}>\n      {listItems\n        .filter((item) => !item.priority === true)\n        .map((li) => (\n          <StyledLi className={className} key={li.text}>\n            {li.text}\n          </StyledLi>\n        ))}\n    </UnPriorityList>\n  </React.Fragment>\n);\n\nconst StyledGenericOL = styled.ol`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: circle;\n  list-style-type: lower-roman;\n  padding: 0;\n`;\n\nconst PriorityList = styled(StyledGenericOL)`\n  flex-direction: row;\n`;\n\nconst UnPriorityList = styled(StyledGenericOL)`\n  flex-direction: column;\n  height: 380px;\n  @media (max-width: 800px) {\n    flex-direction: column;\n    height: auto;\n`;\n\nconst StyledLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n  border: 1px solid orange;\n  margin: 12px;\n  padding: 0.8em;\n  height: 30px;\n  justify-content: center;\n  :nth-child(even) {\n    flex-grow: 1;\n    width: auto;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonsContainer = ({ className }) => {\n  return (\n    <div className={className}>\n      <ReverseOrderButton\n        onClick={(e) => alert(\"Flip the positioning of the lists above: WIP\")}\n      >\n        Reverse order\n      </ReverseOrderButton>\n      <AnnotateButton\n        onClick={(e) => alert(\"Toggle the annotations on or off: WIP\")}\n      >\n        Annotate\n      </AnnotateButton>\n    </div>\n  );\n};\n\nconst StyledButtonsContainer = styled(ButtonsContainer)`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst StyledButton = styled.button`\n  background-color: orange;\n  outline: none;\n  border: none;\n  padding: 1em;\n  font: inherit;\n  color: white;\n  margin: 10px 0;\n  text-transform: uppercase;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s;\n  width: 170px;\n\n  :hover {\n    background-color: greenyellow;\n    color: black;\n  }\n`;\n\nconst ReverseOrderButton = styled(StyledButton)`\n`\n\nconst AnnotateButton = styled(StyledButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid white;\n`;\n\nexport default StyledButtonsContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Subscript = ({ className, text }) => {\n  return <p className={className}>{text}</p>;\n};\n\nconst StyledSubscript = styled(Subscript)`\n  color: grey;\n  font-size: 0.6em;\n  font-weight: bold;\n  font-family: \"Courier New\", Courier, monospace;\n  opacity: 0.8;\n  width: 90%;\n  margin: 10px auto;\n`;\n\nexport default StyledSubscript;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Le other components\nimport { ThePriorityList, TheUnPriorityList } from \"./OrderedLists\";\nimport StyledButtonsContainer from \"./Buttons\";\nimport StyledSubscript from \"./Subscript\";\n\n// The lists\nconst listOfThings = [\n  { text: \"Good things\", priority: true },\n  { text: \"Better things\", priority: true },\n  { text: \"Other good things\", priority: true },\n  { text: \"The best things\", priority: true },\n  { text: \"Unbad things\", priority: true },\n  { text: \"Ununungood things\", priority: true },\n  { text: \"Game of Thrones\", priority: false },\n  { text: \"Avengers: Endgame\", priority: false },\n  { text: \"You should know\", priority: false },\n  { text: \"I'm not serious\", priority: false },\n  { text: \"GoT is definitely a priority\", priority: false },\n  { text: \"As is Avengers: Endgame\", priority: false },\n];\n\nconst Section = ({ className }) => {\n  return (\n    <TheSection>\n      <Title>Here are some things I care about</Title>\n      <StyledSubscript\n        text=\"3. Inside each li: using flex-box (with flex-direction set to 'column')\n        to justify contents wrt the horizontal axis\"\n      />\n      <MainDiv className={className}>\n        <StyledListContainer>\n          <StyledSubscript text=\"4. For each li: using flex-grow: 1 to make every nth item (in this case even numbered item) stretch to occupy the `rest` of the available space in a container *.\n          Notice the flex-grow is in the direction of the flex-direction for the specific container\" />\n          <StyledSubscript\n            text=\"5. Using flex-wrap to force horizontally aligned items\n            (flex-direction = 'row') to flow to the next line when width is\n            smaller than enough\"\n          />\n          <ThePriorityList listItems={listOfThings} />\n        </StyledListContainer>\n        <StyledListContainer>\n          <StyledSubscript text=\"4. Inside the lis: using flex-grow: 1 to make every nth item (in this case even numbered item) stretch to occupy the `rest` of the available space in a container *.\n          Notice the flex-grow is in the direction of the flex-direction for the specific container\" />\n          <StyledSubscript\n            text=\"5. Using flex-wrap to force vertically aligned items (flex-direction\n            = 'column') to flow to the next column when height is smaller than\n            enough\"\n          />\n          <TheUnPriorityList listItems={listOfThings} />\n        </StyledListContainer>\n      </MainDiv>\n      <StyledSubscript\n        text=\"6. Using `justify-content = space-around` to position the two btns below\n      \"\n      />\n      <StyledSubscript\n        text=\"7. This `REVERSE ORDER` btn toggles the flex-direction of teh div above\n        from 'row' to 'row-reverse' on click.\"\n      />\n      <StyledButtonsContainer />\n    </TheSection>\n  );\n};\n\nconst TheSection = styled.section`\n  width: 90%;\n  margin: auto;\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n`;\n\nconst MainDiv = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  @media (max-width: 800px) {\n    flex-direction: column;\n    justify-contents: center;\n    margin: auto;\n  }\n`;\n\nconst StyledListContainer = styled.div`\n  width: 50%;\n  margin: 20px;\n  border: 1px solid orange;\n  padding: 0 2em;\n  height: 500px;\n  @media (max-width: 800px) {\n    height: auto;\n    margin: 10px auto;\n}\n`;\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Le other components\nimport NavBar from \"./components/NavBar\";\nimport Section from \"./components/Section\";\nimport StyledSubscript from \"./components/Subscript\";\n\nconst Body = ({ className }) => {\n  return (\n    <StyledBody className={className}>\n      <NavBar />\n      <StyledSubscript\n        text=\"1. TOP: Using flex-wrap with default flex direction (flex-direction =\n        row) to create a ltr nav bar\"\n      />\n      <StyledSubscript\n        text=\"2. ALSO TOP: Using justify-contents = space-between to place the logo on\n        one end of a nav and other links on the other end of a nav\n      \"\n      />\n      <Section className={className} />\n    </StyledBody>\n  );\n};\n\nconst StyledBody = styled.div`\n  background-color: black;\n  color: white;\n  margin: 0;\n  width: 100%;\n  font-size: 15px;\n  font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\",\n    \"Lucida Sans\", Arial, sans-serif;\n`;\n\nexport default Body;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}